name: CICD_Test

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle

      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create application.yml
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" | base64 --decode > src/main/resources/application.yml

      - name: Set up ENV
        run: echo "TIME=$(date "+%Y-%m-%d-%H-%M")" >> $GITHUB_ENV

      - name: Build the Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dny-be:${{ env.TIME }} .

      - name: Push the Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/dny-be:${{ env.TIME }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to AWS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_KEY }}
          script: |
            sudo docker stop dny-be-container prometheus-container grafana-container
            sudo docker rm -f dny-be-container prometheus-container grafana-container
            
            sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/dny-be:${{ env.TIME }}
            sudo docker pull prom/prometheus:latest
            sudo docker pull grafana/grafana:latest
            
            echo "${{ secrets.PROMETHEUS_YML }}" | base64 --decode > prometheus.yml
            
            if ! sudo docker network ls | grep -q "monitoring"; then
              sudo docker network create monitoring
            fi
            
            sudo docker run -d --name dny-be-container -p 80:8080 \
            --network monitoring \
            --log-driver=awslogs \
            --log-opt awslogs-region=${{ secrets.AWS_REGION }} \
            --log-opt awslogs-group=dny-logs \
            --log-opt awslogs-stream=dny-be-stream \
            ${{ secrets.DOCKERHUB_USERNAME }}/dny-be:${{ env.TIME }}
            
            sudo docker run -d --name prometheus-container -p 9090:9090 \
            --network monitoring \
            -v ./prometheus.yml:/etc/prometheus/prometheus.yml \
            prom/prometheus:latest
            
            sudo docker run -d --name grafana-container -p 3000:3000 \
            --network monitoring \
            grafana/grafana:latest
            
            sudo docker image prune -f
