name: CICD_Prod

on:
  push:
    branches:
      - prod

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create application.yml
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YML_PROD }}" | base64 --decode > src/main/resources/application.yml

      - name: Set up ENV
        run: echo "TIME=$(date "+%Y-%m-%d-%H-%M")" >> $GITHUB_ENV

      - name: Build the Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/wtl-be:${{ env.TIME }} .

      - name: Push the Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/wtl-be:${{ env.TIME }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name ${{ secrets.AWS_CODEDEPLOY_APP_NAME }} \
            --deployment-group-name ${{ secrets.AWS_CODEDEPLOY_GROUP_NAME }} \
            --description "Deployment from GitHub Actions" \
            --revision revisionType=IMAGE,imageUrl=${{ secrets.DOCKERHUB_USERNAME }}/wtl-be:${{ env.TIME }}

      - name: Wait for CodeDeploy Deployment
        run: |
          aws deploy wait deployment-successful --deployment-id ${{ steps.deploy.outputs.deployment-id }}